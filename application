#! /bin/sh

# config
callbackandroid_path="/usr/local/callbackandroid/"

# defaults
create=off
build=off
deploy=off
run=off
target=""
log="phonegap"

function check_devices
{
  adb devices
  if [ "$(adb devices)" = "List of devices attached " ]; then
    
    # restart brige
    adb kill-server
    adb start-server

    # still no devices
    if [ "$(adb devices)" = "List of devices attached " ]; then
      # No devices attached found
      return 1
    fi
  fi  
  
  # Found at least one attached device
  return 0
}

function get_first_online_device
{
  devices=$(check_devices)
  if [[ !(devices) ]]; then
    return 1
  else
    echo $devices
    old_IFS=$IFS
    IFS=$'\n'
    i=0
    target=""
    # each devices
    for line in $(adb devices)
    do  
      ((i++))

      # skip the first line
      if [ $i = 1 ]; then
       continue
      fi

      IFS=$old_IFS
      # each part of the device
      for word in $line
      do
        if [ "$target" = "" ]; then
          target=$word
          
        elif [ "$word" = "offline" ]; then
          target=""
        elif [ "$word" = "device" ]; then
          break 2
        fi
      done
    done  
    IFS=$old_IFS
  fi
}

function get_target_option
{
  # check devices

  # build on specific tqrget
  if [[ !("$target" = "") && !("$target" = "device") && !("$target" = "emulator") ]]; then
    targetoption="-s $target"

  # build on usb device  
  elif [[ ("$target" = "device") ]]; then
    targetoption="-d"

  # build on emulator  
  elif [[ ("$target" = "emulator") ]]; then
    targetoption="-e"   

  # build on something  
  else
    get_first_online_device

    if [[ $target = "" ]]; then
      echo "Error: no online device found"
      exit
    fi

    targetoption="-s $target"   
  fi
}

function get_config
{
  if [ "$ACTIVITY" = "" ]; then
    cd android/
    echo "getting config file..."
    # get phonegap config file
    . ./.phonegap/config
    cd ..
  fi  
}

function check_folder_android
{
  if [[ !(-d android/) ]]; then 
    echo "Error: folder android doesn't exist"
    exit    
  elif [[ (-z $(ls android/)) ]]; then  
    echo "Error: folder android is empty"
    exit          
  fi  
}

function create
{
  echo "\n--- CREATE ---/n"

  # folder doesn't exist
  if [[ !(-d android/) ]]; then 
    echo "creating android folder..."
    mkdir android
  # if folder not empty, trow error
  elif [[ !(-z $(ls android/)) ]]; then
    echo "Error: folder android must be empty"
    exit
  fi    

  ACTIVITY_NAME=${PWD##*/}
  PACKAGE_NAME=com.phonegap.$(echo $ACTIVITY_NAME | tr '[A-Z]' '[a-z]')

  if [[ !(-d $callbackandroid_path) ]]; then 
    echo "Error: folder $callbackandroid_path doesn't exist"
    exit  
  fi

  cd $callbackandroid_path
  ./bin/create $FOLDER/android $PACKAGE_NAME $ACTIVITY_NAME
  echo "android phonegap application created"  
  cd -
}

function build
{
  echo "\n--- BUILD ---\n"

  # folder android
  check_folder_android

  echo "updating www to application..."

  # delete wwww
  rm -rf android/assets/www/
  # create www
  mkdir android/assets/www/
  # copy all files in android/assets/www
  cp -r www/* android/assets/www/

  get_config

  echo "copying phonegap js into $PHONEGAP_PATH"

  # copy the phonegap js
  cp $SOURCE_PHONEGAP_PATH $PHONEGAP_PATH

  echo "compiling..."
  cd android  
  ant debug  
  cd ..
}

function deploy
{
  echo "\n--- DEPLOY ---\n"

  check_folder_android

  get_config
  get_target_option

  echo "installing on $target..."
  adb $targetoption install -r android/bin/$ACTIVITY-debug.apk
}

function run
{
  echo "\n--- RUN ---\n"

  check_folder_android

  get_config
  get_target_option

  echo "starting $PACKAGE/$PACKAGE.$ACTIVITY..."
  
  echo "adb $targetoption shell am start -n $PACKAGE/$PACKAGE.$ACTIVITY"
  start=$(adb $targetoption shell am start -n $PACKAGE/$PACKAGE.$ACTIVITY)

  if [[ "$(echo $start | grep "Warning:\ Activity\ not\ started" -c)" = "1" ]]; then
    echo "Warning: Application already running and use the current package"
    echo "Forcing new installation..."
    build
    deploy
    run
    exit      
    
  elif [[ "$(echo $start | grep "error" -c)" = "1" ]]; then   
    # show the output 
    echo $start
    exit    
  fi

  # show the output 
  echo $start
    
  echo "activate logs $log"
  # just show phonegap log with the time
  if [[ ("$log" = "phonegap") ]]; then
    adb $targetoption logcat -v time PhoneGapLog:V *:S
  elif [[ ("$log" = "debug") ]]; then
    adb $targetoption logcat
  fi  
}

# options
while getopts ":p:t:l:cbdr" opt; do
  case $opt in
    p) 
      if [[ !(-d $OPTARG) ]]; then 
        echo "Error: application folder $OPTARG doesn't exist"
        exit  
      fi    
      echo cd $OPTARG
      cd $OPTARG
      ;;
    t) 
      echo target=$OPTARG
      target=$OPTARG
      ;;      
    c) create=on;;
    b) build=on;;    
    d) deploy=on;;
    r) run=on;;
    l) log=$OPTARG;;
    \?)
      echo "Error: invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Error: option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac  
done


# level to high
if [ ${PWD##*/} = "android" ]; then
  echo "going to parent directory"
  cd ..
fi

FOLDER=${PWD}

if [ "$create" = "on" ]; then
  create
fi

if [ "$build" = "on" ]; then
  build
fi

if [ "$deploy" = "on" ]; then
  deploy       
fi

if [ "$run" = "on" ]; then
  run
fi